// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package ng

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Steps() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"flex flex-col\"><template id=\"step-field-template\"><textarea class=\"step-field\" placeholder=\"Start typing text, / for commands\"></textarea></template><textarea class=\"step-field\" placeholder=\"Start typing text, / for commands\">one two three</textarea> <textarea class=\"step-field\" placeholder=\"Start typing text, / for commands\">four five six</textarea><script>\n        htmx.onLoad(function (elt) {\n            document.querySelectorAll('.step-field').forEach(function (element) {\n                // if element id is step-field-template then skip it\n               if (element.id === 'step-field-template') {\n                   return;\n               }\n\n                if (!element.hasAttribute('data-watched')) {\n                    watch(element);\n                    element.setAttribute('data-watched', 'true');\n                }\n            });\n        });\n\n        function autoGrow(textarea) {\n            textarea.style.height = 'auto';\n            textarea.style.height = textarea.scrollHeight + 'px';\n        }\n\n        function watch(element) {\n            // Add an event listener that logs whenever the first character typed is '/'\n            element.addEventListener('input', function (event) {\n                autoGrow(element);\n                if (element.value[0] === '/') {\n                    console.log('Command detected');\n                }\n                console.log(element.selectionStart, element.selectionEnd);\n            });\n            // Add an event listener that whenever enter is pressed a new textarea is created below\n            // the current one and the input is moved to the new textarea\n            element.addEventListener('keydown', function (event) {\n                if (event.key === 'Enter' && !event.shiftKey && element.selectionStart === element.value.length) {\n                    event.preventDefault();\n\n                    const nextElement = element.nextElementSibling;\n                    if (nextElement && nextElement.classList.contains('step-field') && nextElement.value === '') {\n                        nextElement.focus();\n                        nextElement.setSelectionRange(0, 0);\n                        return;\n                    }\n\n                    // find and clone the step-field-template\n                    const template = document.getElementById('step-field-template');\n                    const newElement = template.content.cloneNode(true).querySelector('.step-field');\n                    element.insertAdjacentElement('afterend', newElement);\n                    watch(newElement);\n                    newElement.focus();\n                }\n            });\n\n            // on up arrow, if the cursor is already within the first line (before the first newline), move the cursor\n            // to the relative position in the previous textarea\n            element.addEventListener('keydown', function (event) {\n                if (event.key === 'ArrowUp') {\n                    idx = element.value.indexOf(\"\\n\");\n                    if (idx == -1 || element.selectionStart <= idx) {\n                        event.preventDefault();\n                        const previousElement = element.previousElementSibling;\n                        if (previousElement && previousElement.classList.contains('step-field')) {\n                            event.preventDefault();\n                            previousElement.focus();\n                            previousElement.setSelectionRange(element.selectionStart, element.selectionEnd);\n                        }\n                    }\n                } else if (event.key === 'ArrowDown') {\n                    idx = element.value.lastIndexOf('\\n');\n                    if (idx == -1 || element.selectionStart > idx) {\n                        const nextElement = element.nextElementSibling;\n                        if (nextElement && nextElement.classList.contains('step-field')) {\n                            event.preventDefault();\n                            nextElement.focus();\n                            nextElement.setSelectionRange(element.selectionStart, element.selectionEnd);\n                        }\n                    }\n                } else if (event.key === 'Backspace' && element.value === '') {\n                    const previousElement = element.previousElementSibling;\n                    if (previousElement && previousElement.classList.contains('step-field')) {\n                        event.preventDefault();\n                        previousElement.focus();\n                        previousElement.setSelectionRange(previousElement.value.length, previousElement.value.length);\n                        element.remove();\n                    }\n                }\n            });\n\n        }\n    </script></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
