package components

import (
    "github.com/otto8-ai/otto8/apiclient/types"
)

type StepPrompt struct {
    workflow types.Workflow
    parentID string
    step     types.Step
    toolRefs map[string]*types.ToolReference
}

func NewStepPrompt(wf types.Workflow, parentID string, step types.Step, toolRefs map[string]*types.ToolReference) templ.Component {
    component := StepPrompt{
        workflow: wf,
        parentID: parentID,
        step:     step,
        toolRefs: toolRefs,
    }
    return component.main()
}

templ (s StepPrompt) main() {
    <div hx-ext="morph" id={ "step_" + s.step.ID}>
        <form hx-trigger="changed delay:1s, input delay:1s" hx-put={ "/ui/workflows/"+s.workflow.ID+"/steps/"+s.step.ID } hx-swap="morph:outerHTML" hx-target={"#step_" + s.step.ID}
            class={"flex focus-within:ring-1 border rounded-lg" + stepsInputBackgroundColor + stepsBorderColor + stepsInputHighlightColor} >
            @s.textarea()
            <div class="flex flex-col justify-start gap-1 p-1">
                @stepButtons(s.workflow, s.step)
            </div>
        </form>
    </div>
}

templ (s StepPrompt) textarea() {
    <textarea id="sys.prompt" name="sys.prompt" oninput="autoGrowTextarea(this)" type="text" placeholder="Say something amazing"
        class={"focus:ring-0 focus:border-none border-none rounded-s-lg min-w-0 grow resize-none h-auto" + stepsInputBackgroundColor} >
        {s.step.Step}
    </textarea>
}

