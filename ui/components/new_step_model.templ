package components

import (
    "fmt"
    "github.com/gptscript-ai/otto/apiclient/types"
)

var systemSteps = []types.ToolReference{
    {
        Metadata: types.Metadata{
            ID: "sys.if",
        },
        ToolReferenceManifest: types.ToolReferenceManifest{
            Name: "If",
        },
        Description: "If a condition is met, execute a set of steps",
    },
    {
        Metadata: types.Metadata{
            ID: "sys.while",
        },
        ToolReferenceManifest: types.ToolReferenceManifest{
            Name: "While",
        },
        Description: "While a condition is met, execute a set of steps",
    },
    {
        Metadata: types.Metadata{
            ID: "sys.prompt",
        },
        ToolReferenceManifest: types.ToolReferenceManifest{
            Name: "Prompt",
        },
        Description: "Prompt the user for input",
    },
}

type NewStepModalData struct {
    Workflow types.Workflow
	StepTemplates types.ToolReferenceList
	ParentID string
}

templ toolReference(wf types.Workflow, parentID string, toolRef types.ToolReference) {
    <li>
        <button class="inline-flex items-center justify-between w-full p-5 text-left text-gray-900 bg-white border border-gray-200 rounded-lg cursor-pointer dark:hover:text-gray-300 dark:border-gray-500 dark:peer-checked:text-blue-500 peer-checked:border-blue-600 peer-checked:text-blue-600 hover:text-gray-900 hover:bg-gray-100 dark:text-white dark:bg-gray-600 dark:hover:bg-gray-500"
             hx-post={ fmt.Sprintf("/ui/workflows/%s/steps/%s/add/%s", wf.ID, parentID, toolRef.ID) }
             hx-target="#edit-workflow"
             hx-swap="outerHTML">
            <div class="block">
                <div class="w-full text-lg font-semibold">{ toolRef.Name }</div>
                <div class="w-full text-gray-500 dark:text-gray-400">{ toolRef.Description }</div>
            </div>
        </button>
    </li>
}

templ NewStepModal(data NewStepModalData) {
    @modalBackdrop()
    <div id="select-modal" tabindex="-1" class="flex overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
        <div class="relative p-4 w-full max-w-md max-h-full">
            <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                        Select a new step
                    </h3>
                    @closeModalButton()
                </div>
                <div class="p-4 md:p-5">
                    <p class="text-gray-500 dark:text-gray-400 mb-4">Step Templates:</p>
                    <ul class="space-y-4 mb-4">
                        for _, step := range data.StepTemplates.Items {
                            @toolReference(data.Workflow, data.ParentID, step)
                        }
                    </ul>
                    <p class="text-gray-500 dark:text-gray-400 mb-4">System Steps:</p>
                    <ul class="space-y-4 mb-4">
                        for _, step := range systemSteps {
                            @toolReference(data.Workflow, data.ParentID, step)
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
}

templ modalBackdrop() {
    <div class="bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-40"></div>
}

templ closeModalButton() {
    <button onclick="$('#modal-new-step').children().remove()" type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm h-8 w-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white">
        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
        </svg>
        <span class="sr-only">Close modal</span>
    </button>
}
