package components

import (
    "github.com/gptscript-ai/otto/apiclient/types"
)

const (
    stepsInputBackgroundColor = " bg-gray-50 dark:bg-gray-700 "
    stepsInputColor = "text-gray-900 dark:text-white"
    stepsLabelBackgroundColor = " bg-gray-200 dark:bg-gray-600 "
    stepsInputHighlightColor = " focus-within:ring-blue-500 focus-within:border-blue-500 dark:focus-within:ring-blue-500 dark:focus-within:border-blue-500 "
    stepsBorderColor = " border-gray-300 dark:border-gray-600 "
)

type stepsComponent struct {
    workflow types.Workflow
    parentListID string
    stepList []types.Step
    toolRefs  map[string]*types.ToolReference
}

func NewSteps(wf types.Workflow, parentListID string, stepList []types.Step, toolRefs map[string]*types.ToolReference) templ.Component {
    component := stepsComponent{
        workflow: wf,
        parentListID: parentListID,
        stepList: stepList,
        toolRefs: toolRefs,
    }
    return component.main()
}

templ (s stepsComponent) main() {
    <div class={"flex flex-col gap-2 text-sm" + stepsInputColor}
        if s.parentListID != "" {
            data-step-id={ s.parentListID }
            data-workflow-id={ s.parentListID }
        } >
        for _, currentStep := range s.stepList {
            @NewStep(s.workflow, s.parentListID, currentStep, s.toolRefs)
        }
        <button
            class="w-full rounded-lg p-2 border-2 border-blue-600 hover:border-blue-500 dark:text-white"
            hx-get={ "/ui/workflows/"+s.workflow.ID+"/steps/new?parentID=" + s.parentListID}
            hx-target="#modal-new-step">
            Add Step
        </button>
        <script>
            (() => {
                const el = $(document.currentScript).closest("div")[0];
                htmx.onLoad(function(content) {
                    new Sortable(el, {
                        animation: 150,
                        ghostClass: 'blue-background-class',
                        onEnd: function(evt) {
                            const stepID = $(el).data("step-id");
                            const workflowID = $(el).data("workflow-id");
                            const newIndex = evt.newIndex;
                            const oldIndex = evt.oldIndex;
                            const url = "/ui/workflows/"+workflowID+"/steps/"+stepID+"/move?newIndex="+newIndex+"&oldIndex="+oldIndex;
                            htmx.ajax("put", url);
                        },
                    });
                })
            })()
        </script>
    </div>
}