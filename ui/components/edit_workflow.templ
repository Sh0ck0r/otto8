package components

import (
    "github.com/gptscript-ai/otto/apiclient/types"
)

type editWorkflowComponent struct {
    componentID string
    workflow types.Workflow
    toolRefs map[string]*types.ToolReference
}

func NewEditWorkflow(id string, workflow types.Workflow, stepTemplates types.ToolReferenceList) templ.Component {
    component := editWorkflowComponent{
        componentID: id,
        workflow: workflow,
        toolRefs: map[string]*types.ToolReference{},
    }
    for _, toolRef := range stepTemplates.Items {
        component.toolRefs[toolRef.ID] = &toolRef
    }
    return component.main()
}

templ (e editWorkflowComponent) main() {
    <div id={e.componentID} class="flex flex-col p-6 rounded shadow border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800">
        @e.editWorkflowHeader()
        @NewSteps(e.workflow, "", e.workflow.Steps, e.toolRefs)
        <button
            class="mt-2 w-full rounded-lg p-2 bg-blue-600 hover:bg-blue-500 text-white"
            hx-post={ "/ui/workflows/"+e.workflow.ID+"/run" }
            hx-target="#main-thread">
            Run Workflow
        </button>
        <div id="modal-new-step"></div>
    </div>
    <div id="main-thread" class="flex gap-4" ></div>
}

templ (e editWorkflowComponent) editWorkflowHeader() {
    <div class="mb-6">
        <h2 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
            Create your workflow
        </h2>
        <p class="max-w-sm text-gray-700 dark:text-gray-400">
            Think of a workflow as automating a conversation with an AI Agent.
        </p>
    </div>
}
